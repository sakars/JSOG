name: Build and Test

on:
  push:
    branches: 
      - main
      - CI-test
  pull_request:
    branches:
      - main
      - CI-test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up CMake
    - name: Set up CMake
      uses: lukka/get-cmake@latest

    # Install dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update

    - name: Install nlohmann/json
      run: |
        # Clone and install nlohmann/json
        cd ${{ github.workspace }}
        git clone https://github.com/nlohmann/json.git
        cd json
        mkdir build && cd build
        cmake -DJSON_BuildTests=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/third_party ..
        make install
        cd ../..
  
    - name: Install uriparser
      run: |
        # Clone and install uriparser
        cd ${{ github.workspace }}
        git clone https://github.com/uriparser/uriparser
        cd uriparser
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DURIPARSER_BUILD_WCHAR_T=OFF -DURIPARSER_BUILD_TESTS=OFF -DURIPARSER_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/third_party ..
        make install
        cd ../..

    # Configure the project
    - name: Configure with CMake
      run: |
        cmake -Bbuild -H. -Dnlohmann_json_DIR=../json/build -Duriparser_DIR=../uriparser/build
          

    # Build the project
    - name: Build the project
      run: cmake --build build --target all -- -j$(nproc)

    # Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Checkout the code (necessary to keep the source files synced)
    - name: Checkout code
      uses: actions/checkout@v3

    # Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    # Run tests
    - name: Run tests
      run: ctest --test-dir build --output-on-failure
